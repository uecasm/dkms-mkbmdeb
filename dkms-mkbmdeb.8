.\" -*- nroff -*-
.\"
.\" .SY, .YS, .OP macros from /usr/share/groff/1.21/tmac/an-ext.tmac
.\"
.\" Declare start of command synopsis.  Sets up hanging indentation.
.de SY
.  ie !\\n(mS \{\
.    nh
.    nr mS 1
.    nr mA \\n(.j
.    ad l
.    nr mI \\n(.i
.  \}
.  el \{\
.    br
.    ns
.  \}
.
.  HP \w'\fB\\$1\fP\ 'u
.  B "\\$1"
..
.
.
.\" End of command synopsis.  Restores adjustment.
.de YS
.  in \\n(mIu
.  ad \\n(mA
.  hy \\n(HY
.  nr mS 0
..
.
.
.\" Declare optional option.
.de OP
.  ie \\n(.$-1 \
.    RI "[\fB\\$1\fP" "\ \\$2" "]"
.  el \
.    RB "[" "\\$1" "]"
..
.TH DKMS\-MKBMDEB 8
.SH NAME
dkms-mkbmdeb \- Binary Debian Package Generator for dkms
.SH SYNOPSIS
.SY dkms\-mkbmdeb
.OP options
.YS
.SH DESCRIPTION
.B dkms\-mkbmdeb
is a utility which packages up binary modules generated by
.B dkms
into a
.I .deb
file that can be installed onto another compatible system that does not have
.B dkms
itself installed.
.PP
For two systems to be compatible, they must be running exactly the same
kernel version and architecture.
Note that if you use signed modules, you will need to separately ensure that
the corresponding keys are trusted on both systems as well.
.PP
For copying modules between systems that do have
.B dkms
installed, prefer using
.B dkms mktarball
instead, or install the original \fIdriver\fR\-dkms package on both systems.
.PP
Unlike most functions of
.B dkms
itself, this tool can be run by an unprivileged user.
.SH OPTIONS
.SY 
.OP \-m|\-\-module
.I module\fR/\fImodule-version
.YS
.IP "" 4
Specify the name and version of the module to be packaged.
The module must have already been built by
.BR dkms .
.SY
.BI \-m \ module
.BI \-v \ module-version
.YS
.IP "" 4
You may instead specify the module name and version using separate parameters,
if you prefer.
.SY
.BI \-k|\-\-kernelver \ kernel\fR[/\fIarch\fR]\ ...
.YS
.IP "" 4
Specify the kernel version (and optionally the architecture)
of the module to be packaged.
You must have already built the module for this kernel using
.BR dkms .
You may specify more than one kernel version to create multiple packages.
If you do not specify any version,
.B dkms\-mkbmdeb
will try to make a package for your current kernel version.
.SY
.BI \-k \ kernel \ \-a \ arch \ \fR...
.YS
.IP "" 4
You may instead specify the kernel version and arch using separate parameters,
if you prefer.
.IP "" 4
The arch may be specified zero, one, or the same number of times as the kernel version.
If not specified, your current architecture will be used.
If specified once, it is used for all specified kernel versions.
Otherwise, you must specify an arch for each kernel version, in order.
.SY 
.BI \-o|\-\-output \ dir
.YS
.IP "" 4
Specify an alternative path where the resulting output
.I .deb
files will be written.
By default they will be written to the current directory.
.SY
.BI \-\-dkms \ dir
.YS
.IP "" 4
Specify an alternative path to the
.B dkms
binary.
By default it will use
.IR /usr/sbin/dkms .
.SY
.BI \-\-dkmstree \ dir
.YS
.IP "" 4
Specify an alternative path to the
.B dkms
tree where the modules have been built.
By default it will look in
.IR /var/lib/dkms .
.SH EXAMPLES
.TP
.B dkms\-mkbmdeb mydriver/1.42
Creates a binary module package for
.B mydriver
version
.B 1.42
and the currently running kernel.
.TP
.B dkms\-mkbmdeb \-m mydriver/1.42 \-k 6.1.0\-35\-amd64 \-k 6.1.0\-35\-rt\-amd64
Creates a binary module package for
.B mydriver
version
.B 1.42
and kernel versions
.BR 6.1.0\-35\-amd64 " and " 6.1.0\-35\-rt\-amd64 .
.SH ORIGINAL MODULES
Unlike
.B dkms
itself (but like the previous behavior of
.BR "dkms mkbmdeb" ),
the packages generated by
.B dkms\-mkbmdeb
will blindly install modules even if your kernel already includes
other modules that have the same name.
In this case, it is up to your
.B depmod
rules which one prevails; by default it will be these, however,
since they are installed to the
.I updates
directory.
This may change if a particular package has used custom
templates that do something different.
.PP
By default you cannot install these packages to a system that
already has the modules installed via
.B dkms
itself, as they install to the same location and would directly conflict.
.SH TEMPLATES
In order to build a Debian package, a number of special files are required,
including a
.I debian
subdirectory of the package source tree.
.B dpkg\-mkbmdeb
generates these files from a template directory provided by the module source package,
by the system administrator, or included defaults.
.PP
Templates are searched in the following locations, in order:
.IP 1. 4
The
.IB MODULENAME \-dkms\-mkbmdeb
directory in the module's source tree (i.e.
.BI /usr/src/ MODULENAME \- MODULEVERSION\fR)
.IP "" 4
This allows a module to provide its own templates by installing them as part of
its own source package.
.IP 2. 4
The
.B /etc/dkms/template\-dkms\-mkbmdeb
directory.
.IP "" 4
This allows
.B dkms\-mkbmdeb
to be installed, and for the system administrator to customize the default templates
if they so wish.
.IP 3. 4
The
.B template
subdirectory adjacent to
.B dpkg\-mkbmdeb
itself.
.IP "" 4
This allows
.B dkms\-mkbmdeb
to be run directly from its own source tree without being installed first.
.PP
A template directory is used complete; in particular if a module chooses to override
the default templates then it must provide all necessary files.
It will not mix files from the fallback directories.
.PP
A package is built by running
.B dpkg-buildpackage
in a temporary directory generated from the chosen template and
including a tarball generated by
.BR "dkms mktarball" ,
containing the binary modules to be installed.
.SH TEMPLATE VARIABLES
Several strings are replaced (via
.BR sed (1))
in the template before actual build, so that the templates can be somewhat generic.
.TP
.B DEBIAN_PACKAGE
The Debian package name (derived from the module name).
.TP
.B DEBIAN_BUILD_ARCH
The Debian build architecture for the package.
.TP
.B KERNEL_VERSION
The kernel version that this package is built for.
.TP
.B MODULE_NAME
The module name.
.TP
.B MODULE_VERSION
The module version.
.TP
.B DATE_STAMP
An RFC 5322 format timestamp at which this package is being built.
.PP
These variables are replaced only in the
.I debian
subdirectory.
Any files in the base directory or other subdirectories of the
template are left unmodified, though some variables are available in
the environment during build (most from the normal build process), including:
.TP
.B NAME
The module name.
.TP
.B VERSION
The module version.
.TP
.B KVER
The kernel version.
.TP
.B KARCH
The kernel architecture.
.SH AUTHORS
Gavin Lambert wrote this manpage and the
.B dkms\-mkbmdeb
script, with significant chunks copied or otherwise written to perform
alike to a prior version of
.B dkms
(before equivalent functionality was removed from it).
As such, credit also goes to the authors of that tool.
.SH WEBPAGE
.UR https://github.com/uecasm/dkms\-mkbmdeb
GitHub
.UE
.SH SEE ALSO
.MR dkms 8 ,
.MR dpkg-buildpackage 1
